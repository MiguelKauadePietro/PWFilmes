@page "/categoria-nova"

@using PWFilmes.Domain;
@using System.Net;

@inject NavigationManager NavigationManager;
@inject HttpClient Http;

<h3>Nova Categoria</h3>

<EditForm Model="@categoriaModel" OnValidSubmit="Confirmar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <RadzenRow>
        <RadzenColumn Size="12" SizeMD="6" SizeLG="9">
            <RadzenFormField Text="Descrição" Style="width: 100%;">
                <RadzenTextBox @bind-Value="categoriaModel.Descricao" />
            </RadzenFormField>
            <ValidationMessage For=@(() => categoriaModel.Descricao) />
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
            <RadzenFormField Text="Cor" Style="width: 100%;">
                <RadzenColorPicker @bind-Value="categoriaModel.Cor" />
            </RadzenFormField>
            <ValidationMessage For=@(() => categoriaModel.Cor) />
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" class="rz-mt-4">
        <RadzenButton Text="Cancelar"
                      ButtonStyle="ButtonStyle.Danger"
                      class="rz-border-radius-10"
                      Click="Cancelar" />
        <RadzenButton Text="Confirmar"
                      ButtonStyle="ButtonStyle.Success"
                      class="rz-border-radius-10"
                      ButtonType="ButtonType.Submit" />
    </RadzenStack>
</EditForm>

@code {
    Categoria categoriaModel = new Categoria();

    private void Cancelar()
    {
        NavigationManager.NavigateTo("categoria/listar");
    }

    private async void Confirmar()
    {
        var categoriaJson = JsonContent.Create(categoriaModel);
        var response = await Http.PostAsync("api/Categoria/adicionar", categoriaJson);
        if (response.StatusCode == HttpStatusCode.Created)
            NavigationManager.NavigateTo("categoria/listar");
    }
}



@*<EditForm Model="@categoriaModel" OnValidSubmit="Confirmar">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <RadzenNotification />

        <RadzenRow>
            <RadzenColumn Size="12" SizeMD="6" SizeLG="9">
                <RadzenFormField Text="Descrição" Style="width: 100%;">
                    <RadzenTextBox @bind-Value="@categoriaModel.Descricao" Style="width: 100%;" />
                </RadzenFormField>
                <ValidationMessage For=@(() => categoriaModel.Descricao) />
            </RadzenColumn>
            <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
                <RadzenFormField Text="Cor" Style="width: 100%;">
                    <RadzenColorPicker @bind-Value=@categoriaModel.Cor ShowHSV="true" ShowRGBA="true" ShowColors="true" ShowButton="true" Style="width: 100%;" />
                </RadzenFormField>
                <ValidationMessage For=@(() => categoriaModel.Cor) />
            </RadzenColumn>
        </RadzenRow>

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Style="width: 100%;" class="rz-mt-4">
            <RadzenButton Icon="delete_forever" ButtonStyle="ButtonStyle.Danger" Text="Cancelar" Click="Cancelar" class="rz-border-radius-10" />
            <RadzenButton Icon="delete_forever" ButtonStyle="ButtonStyle.Success" Text="Confirmar" ButtonType="ButtonType.Submit" class="rz-border-radius-10" />
        </RadzenStack>
    </EditForm>

    @code {
        Categoria categoriaModel = new Categoria();

        void ShowNotification(NotificationMessage message)
        {
            NotificationService.Notify(message);
        }

        public async void Confirmar()
        {
            var myContent = JsonContent.Create(categoriaModel);
            var response = await Http.PostAsync("api/Categoria/adicionar", myContent);
            if (response.StatusCode == HttpStatusCode.Created)
            {
                var content = await response.Content.ReadAsStringAsync();
                ShowNotification(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Sucesso", Detail = content, Duration = 4000 });
                NavigationManager.NavigateTo("categoria-listar");
            }
        }

        public void Cancelar()
        {
            NavigationManager.NavigateTo("categoria-listar");
        }
    }



*@
